using System;
using System.Data;
using System.Globalization;
using System.Threading;
using System.Windows.Forms;
using DevExpress.XtraBars;
using MySql.Data.MySqlClient;
namespace SFE
{
    public partial class CertificatEssai : UserControl
    {
        // Connecction string--------------------------------------------------------------------------------
        MySqlConnection connexion = new MySqlConnection("Server=localhost;Port=3306;Database=technitar;Uid=root;");
        MySqlCommand cmd;
        DataTable dt = new DataTable();
        private string data = "SELECT c.id as ID , c.num_Interne as 'Num Interne' , "
                    + " d.Nom_Demandeur as 'Demandeur' , d.Client as 'Client' , "
                    + " s.Marque as 'Marque' , s.Type as 'Type', s.Reference as 'Référence' , s.Num_Serie as 'Num de Série' ,"
                    + " cond.Nature_Produit as 'Nature produit' , cond.P_service as 'Pression de service' , cond.Temp_service as 'Temp de Service' , cond.Contre_P as 'Contre Pression' , cond.P_ouverture as 'Pression ouverture' , cond.P_reglage_froid as 'Pression de Réglage à froid', "
                    + " autre.Repere as 'Repère' , autre.D_entre as 'Diamètre entré' , autre.D_sortie as 'Diamètre Sortie', autre.D_orifice as 'Diamètre orifice' , autre.Pn as 'Série ou PN',"
                    + " test.num_manométre as 'N° Manomètre' , test.etan_90_Crit as 'Etanchéité 90% Critères' , test.Res_Crit as 'Résultats Critères', test.H_reglage_avant as 'Hauteur vis réglage avant' , test.H_reglage_apres as 'Hauteur vis réglage après', test.etan as 'Etanchéité 90%'"
                    + " FROM certificatdessai c INNER JOIN demandeur d ON c.id = d.id INNER JOIN identification_soupape s ON s.id = d.id"
                    + " INNER JOIN conditions_de_service cond ON s.id = cond.id "
                    + " INNER JOIN autres_caracteristique autre ON cond.id = autre.id "
                    + " INNER JOIN tests_et_controles test ON test.id = autre.id ;";
        //--------------------------------------------------------------------------------------------------
        public CertificatEssai()
        {
            InitializeComponent();
            UpLoad();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
            IsEmpty();
        }
        public void IsEmpty()
        {
            if (dataGridView1.Rows.Count == 0)
            {
                Dupliquer.Enabled = false;
                Supprimer.Enabled = false;
                Modifier.Enabled = false;
                V_Rapport.Enabled = false;
                contextMenuStrip1.Enabled = false;

            }
            else
            {
                Dupliquer.Enabled = true;
                Supprimer.Enabled = true;
                Modifier.Enabled = true;
                V_Rapport.Enabled = true;
                contextMenuStrip1.Enabled = true;
            }
        }
        public void UpLoad()
        {
            IsEmpty();
            try
            {

                connexion.Open();
                MySqlDataAdapter adapt;
                adapt = new MySqlDataAdapter(data, connexion);
                dt = new DataTable();
                adapt.FillAsync(dt);
                dataGridView1.DataSource = dt;
                connexion.Close();
                dataGridView1.Refresh();


            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                connexion.Close();
            }
        }

        public void Delete()
        {
            try
            {

                string selectedIndexS = dataGridView1.CurrentRow.Cells["ID"].Value.ToString();
                int selectedIndex = Int32.Parse(selectedIndexS);
                string d = " DELETE certificatdessai , demandeur , identification_soupape , conditions_de_service , autres_caracteristique , tests_et_controles"
                         + " FROM certificatdessai  "
                         + " INNER JOIN demandeur  ON certificatdessai.id = demandeur.id "
                         + " INNER JOIN identification_soupape  ON identification_soupape.id = demandeur.id "
                         + " INNER JOIN conditions_de_service ON identification_soupape.id = conditions_de_service.id"
                         + " INNER JOIN autres_caracteristique  ON conditions_de_service.id = autres_caracteristique.id  "
                         + " INNER JOIN tests_et_controles ON tests_et_controles.id = autres_caracteristique.id  "
                         + " WHERE certificatdessai.id = " + selectedIndex + " AND identification_soupape.id = " + selectedIndex + " AND conditions_de_service.id = " + selectedIndex + " AND tests_et_controles.id = " + selectedIndex + " AND demandeur.id = " + selectedIndex + " AND autres_caracteristique.id = " + selectedIndex + " ;";
                int selectIndex = dataGridView1.CurrentCell.RowIndex;
                if (selectIndex > -1)
                {

                    MySqlCommand MyCommand2 = new MySqlCommand(d, connexion);
                    MySqlDataReader MyReader2;
                    connexion.Open();
                    MyReader2 = MyCommand2.ExecuteReader();
                    dataGridView1.Rows.RemoveAt(selectIndex);
                    MessageBox.Show("Suppression bien effectué ", "Suppression", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    while (MyReader2.Read())
                    {
                    }
                    connexion.Close();

                }
            }

            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }

        }

        public void GetSelectedRow(int a)
        {
            try { 
                FormCertif1 form2 = new FormCertif1();
                form2.Show();
                string selectedIndexS = dataGridView1.CurrentRow.Cells["ID"].Value.ToString();
                string dataR = "Select certificatdessai.Date_Création , tests_et_controles.Essais_Satisfaisants , tests_et_controles.num_manométre From certificatdessai "
                            + "Inner join tests_et_controles on certificatdessai.id = tests_et_controles.id  where tests_et_controles.id = " + Int32.Parse(selectedIndexS);
                connexion.Open();
                cmd = new MySqlCommand(dataR, connexion);
                MySqlDataReader reader = cmd.ExecuteReader();
                if (reader.Read())
                {
                    string date = reader.GetValue(0).ToString();
                    form2.dateTimePicker1.Text = date;
                    form2.comboBox1.Text = reader.GetValue(2).ToString();
                    if (reader.GetValue(1).ToString() == "OUI")
                    {
                        form2.Oui.Checked = true;
                        form2.Non.Checked = false;
                    }
                    else if (reader.GetValue(1).ToString() == "Non")
                    {
                        form2.Oui.Checked = false;
                        form2.Non.Checked = true;
                    }
                    if (a == 0)
                    {
                        form2.Enregistrer.Enabled = false;

                    }
                    else if (a == 1)
                    {
                        form2.Add.Enabled = false;
                    }
                }
                reader.Close();
                connexion.Close();
                form2.id.Text = selectedIndexS;
                form2.Demandeur.Text = dataGridView1.CurrentRow.Cells["Demandeur"].Value.ToString();
                form2.Client.Text = dataGridView1.CurrentRow.Cells["Client"].Value.ToString();
                form2.Marque.Text = dataGridView1.CurrentRow.Cells["Marque"].Value.ToString();
                form2.Type.Text = dataGridView1.CurrentRow.Cells["Type"].Value.ToString();
                form2.N_de_Série.Text = dataGridView1.CurrentRow.Cells["Num de Série"].Value.ToString();
                form2.Nature_produit.Text = dataGridView1.CurrentRow.Cells["Nature produit"].Value.ToString();
                form2.PService.Text = dataGridView1.CurrentRow.Cells["Pression de service"].Value.ToString();
                form2.TService.Text = dataGridView1.CurrentRow.Cells["Temp de Service"].Value.ToString();
                form2.Contre_p.Text = dataGridView1.CurrentRow.Cells["Contre Pression"].Value.ToString();
                form2.P_ouverture.Text = dataGridView1.CurrentRow.Cells["Pression ouverture"].Value.ToString();
                form2.Pression_Reglage_froid.Text = dataGridView1.CurrentRow.Cells["Pression de Réglage à froid"].Value.ToString();
                form2.NumInterne.Text = dataGridView1.CurrentRow.Cells["Num Interne"].Value.ToString();
                form2.Repere.Text = dataGridView1.CurrentRow.Cells["Repère"].Value.ToString();
                form2.Diametre_entre.Text = dataGridView1.CurrentRow.Cells["Diamètre entré"].Value.ToString();
                form2.Diametre_Sortie.Text = dataGridView1.CurrentRow.Cells["Diamètre Sortie"].Value.ToString();
                form2.DiametreOrifice.Text = dataGridView1.CurrentRow.Cells["Diamètre orifice"].Value.ToString();
                form2.PN.Text = dataGridView1.CurrentRow.Cells["Série ou PN"].Value.ToString();
                form2.Etanchete.Text = dataGridView1.CurrentRow.Cells["Etanchéité 90%"].Value.ToString();
                form2.ResCriteres.Text = dataGridView1.CurrentRow.Cells["Résultats Critères"].Value.ToString();
                form2.HautRegAvant.Text = dataGridView1.CurrentRow.Cells["Hauteur vis réglage avant"].Value.ToString();
                form2.HautRegApres.Text = dataGridView1.CurrentRow.Cells["Hauteur vis réglage après"].Value.ToString();

            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
                connexion.Close();
            }
        }

        private void UserControl3_Load(object sender, EventArgs e)
        {
            UpLoad();
        }
        // Add button
        private void Add_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            FormCertif1 form2 = new FormCertif1();
            form2.Show();
            form2.Enregistrer.Enabled = false;

        }
        // Dupliquer button
        private void Dupliquer_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            GetSelectedRow(0);
        }

        public void Refresh_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                connexion.Open();
                MySqlDataAdapter adapt;
                adapt = new MySqlDataAdapter(data, connexion);
                dt = new DataTable();
                adapt.Fill(dt);
                dataGridView1.DataSource = dt;
                connexion.Close();
                dataGridView1.Refresh();
                IsEmpty();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                connexion.Close();

            }
        }

        // Supprimer button
        private void Supprimer_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            DialogResult result = MessageBox.Show("Est-ce que vous êtes sure ? ", "Supprimer", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (result == DialogResult.Yes)
            {
                Delete();
            }
            IsEmpty();
        }
        // V_Rapport
        private void V_Rapport_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try
            {
                string selectedIndexS = dataGridView1.CurrentRow.Cells["ID"].Value.ToString();
                int selectedIndex = Int32.Parse(selectedIndexS);
                string data_Query = "INSERT IGNORE INTO query ( id , Ref , Date_Création , num_Interne , Nom_Demandeur , Client , Nature_Produit , P_service , Temp_service , Contre_P , P_ouverture , P_reglage_froid , Marque , Reference , Type , Num_Serie , Repere , D_entre , D_sortie , D_orifice , Pn , num_manométre , etan_90_Crit , Res_Crit , H_reglage_avant , H_reglage_apres , etan , Essais_Satisfaisants , C_Essais_Satisfaisants ) " + "Select certificatdessai.id , certificatdessai.Ref , certificatdessai.Date_Création , certificatdessai.num_Interne , demandeur.Nom_Demandeur , demandeur.Client , conditions_de_service.Nature_Produit , conditions_de_service.P_service , conditions_de_service.Temp_service , conditions_de_service.Contre_P , conditions_de_service.P_ouverture , conditions_de_service.P_reglage_froid , identification_soupape.Marque , identification_soupape.Reference , identification_soupape.Type , identification_soupape.Num_Serie , autres_caracteristique.Repere , autres_caracteristique.D_entre , autres_caracteristique.D_sortie , autres_caracteristique.D_orifice , autres_caracteristique.Pn , tests_et_controles.num_manométre , tests_et_controles.etan_90_Crit , tests_et_controles.Res_Crit , tests_et_controles.H_reglage_avant , tests_et_controles.H_reglage_apres , tests_et_controles.etan , tests_et_controles.Essais_Satisfaisants , tests_et_controles.C_Essais_Satisfaisants " + "From certificatdessai" + " Inner join demandeur on certificatdessai.id = demandeur.id" + " Inner join conditions_de_service on demandeur.id = conditions_de_service.id" + " Inner join identification_soupape on conditions_de_service.id = identification_soupape.id" + " Inner join autres_caracteristique on identification_soupape.id = autres_caracteristique.id" + " Inner join tests_et_controles on tests_et_controles.id = autres_caracteristique.id "
                                    + "where certificatdessai.id = " + selectedIndex;
                string data_Query_delete = "Delete From query where id !=" + selectedIndex;
                connexion.Open();
                cmd = new MySqlCommand(data_Query, connexion);
                dt.Load(cmd.ExecuteReader());
                connexion.Close();
                //----------------------
                MySqlCommand MyCommand = new MySqlCommand(data_Query_delete, connexion);
                MySqlDataReader MyReader;
                connexion.Open();
                MyReader = MyCommand.ExecuteReader();
                while (MyReader.Read())
                {
                }
                MyReader.Close();
                connexion.Close();
                Form3 f3 = new Form3();
                f3.ShowDialog();
            }catch(Exception ex)
            {
                MessageBox.Show(ex.Message);
                connexion.Close();
            }

        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            connexion.Open();
            MySqlDataAdapter adapt;
            string data1 = "SELECT c.id as ID , c.num_Interne as 'Num Interne' , " + " d.Nom_Demandeur as 'Demandeur' , d.Client as 'Client' , " + " s.Marque as 'Marque' , s.Type as 'Type', s.Reference as 'Référence' , s.Num_Serie as 'Num de Série' ," + " cond.Nature_Produit as 'Nature produit' , cond.P_service as 'Pression de service' , cond.Temp_service as 'Temp de Service' , cond.Contre_P as 'Contre Pression' , cond.P_ouverture as 'Pression ouverture' , cond.P_reglage_froid as 'Pression de Réglage à froid', " + " autre.Repere as 'Repère' , autre.D_entre as 'Diamètre entré' , autre.D_sortie as 'Diamètre Sortie', autre.D_orifice as 'Diamètre orifice' , autre.Pn as 'Série ou PN'," + " test.num_manométre as 'N° Manomètre' , test.etan_90_Crit as 'Etanchéité 90% Critères' , test.Res_Crit as 'Résultats Critères', test.H_reglage_avant as 'Hauteur vis réglage avant' , test.H_reglage_apres as 'Hauteur vis réglage après', test.etan as 'Etanchéité 90%'" + " FROM certificatdessai c INNER JOIN demandeur d ON c.id = d.id INNER JOIN identification_soupape s ON s.id = d.id" + " INNER JOIN conditions_de_service cond ON s.id = cond.id " + " INNER JOIN autres_caracteristique autre ON cond.id = autre.id " + " INNER JOIN tests_et_controles test ON test.id = autre.id " + " where c.num_Interne  like '%" + textBox1.Text + "%'" + " OR d.Nom_Demandeur like'%" + textBox1.Text + "%'" + " OR d.Client like'%" + textBox1.Text + "%'" + " OR s.Marque like'%" + textBox1.Text + "%'" + " OR s.Type like'%" + textBox1.Text + "%'" + " OR s.Reference like'%" + textBox1.Text + "%'" + " OR s.Num_Serie like'%" + textBox1.Text + "%'"
          + " OR s.Num_Serie like'%" + textBox1.Text + "%'"
          + " OR cond.Nature_Produit like'%" + textBox1.Text + "%'"
          + " OR test.num_manométre like'%" + textBox1.Text + "%'";

            adapt = new MySqlDataAdapter(data1, connexion);
            dt = new DataTable();
            adapt.Fill(dt);
            dataGridView1.DataSource = dt;
            connexion.Close();

        }

        private void Modifier_ItemClick(object sender, ItemClickEventArgs e)
        {
            GetSelectedRow(1);

        }

        private void barButtonItem1_ItemClick(object sender, ItemClickEventArgs e)
        {
            Report report = new Report();
            report.ShowDialog();
        }

        private void dupliquerToolStripMenuItem_Click(object sender, EventArgs e)
        {
            GetSelectedRow(0);
        }

        private void modifierToolStripMenuItem_Click(object sender, EventArgs e)
        {
            GetSelectedRow(1);

        }

        private void visualiserSurRapportToolStripMenuItem_Click(object sender, EventArgs e)
        {
            try
            {
                string selectedIndexS = dataGridView1.CurrentRow.Cells["ID"].Value.ToString();
                int selectedIndex = Int32.Parse(selectedIndexS);
                string data_Query = "INSERT IGNORE INTO query ( id , Ref , Date_Création , num_Interne , Nom_Demandeur , Client , Nature_Produit , P_service , Temp_service , Contre_P , P_ouverture , P_reglage_froid , Marque , Reference , Type , Num_Serie , Repere , D_entre , D_sortie , D_orifice , Pn , num_manométre , etan_90_Crit , Res_Crit , H_reglage_avant , H_reglage_apres , etan , Essais_Satisfaisants , C_Essais_Satisfaisants ) " + "Select certificatdessai.id , certificatdessai.Ref , certificatdessai.Date_Création , certificatdessai.num_Interne , demandeur.Nom_Demandeur , demandeur.Client , conditions_de_service.Nature_Produit , conditions_de_service.P_service , conditions_de_service.Temp_service , conditions_de_service.Contre_P , conditions_de_service.P_ouverture , conditions_de_service.P_reglage_froid , identification_soupape.Marque , identification_soupape.Reference , identification_soupape.Type , identification_soupape.Num_Serie , autres_caracteristique.Repere , autres_caracteristique.D_entre , autres_caracteristique.D_sortie , autres_caracteristique.D_orifice , autres_caracteristique.Pn , tests_et_controles.num_manométre , tests_et_controles.etan_90_Crit , tests_et_controles.Res_Crit , tests_et_controles.H_reglage_avant , tests_et_controles.H_reglage_apres , tests_et_controles.etan , tests_et_controles.Essais_Satisfaisants , tests_et_controles.C_Essais_Satisfaisants " + "From certificatdessai" + " Inner join demandeur on certificatdessai.id = demandeur.id" + " Inner join conditions_de_service on demandeur.id = conditions_de_service.id" + " Inner join identification_soupape on conditions_de_service.id = identification_soupape.id" + " Inner join autres_caracteristique on identification_soupape.id = autres_caracteristique.id" + " Inner join tests_et_controles on tests_et_controles.id = autres_caracteristique.id "
                                    + "where certificatdessai.id = " + selectedIndex;
                string data_Query_delete = "Delete From query where id !=" + selectedIndex;
                connexion.Open();
                cmd = new MySqlCommand(data_Query, connexion);
                dt.Load(cmd.ExecuteReader());
                connexion.Close();
                //----------------------
                MySqlCommand MyCommand = new MySqlCommand(data_Query_delete, connexion);
                MySqlDataReader MyReader;
                connexion.Open();
                MyReader = MyCommand.ExecuteReader();
                while (MyReader.Read())
                {
                }
                MyReader.Close();
                connexion.Close();
                Form3 f3 = new Form3();
                f3.ShowDialog();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                connexion.Close();
            }

        }

        private void supprimerToolStripMenuItem_Click(object sender, EventArgs e)
        {
            DialogResult result = MessageBox.Show("Est-ce que vous êtes sure ? ", "Supprimer", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (result == DialogResult.Yes)
            {
                Delete();
            }
        }
    }
}